{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/popup.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "const CookieService = {\n\n  setCookie(name, value, days) {\n    let expires = '';\n    if (days) {\n      const date = new Date();\n      date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n      expires = '; expires=' + date.toUTCString();\n      // console.log(`Set cookie: ${name}=${value}; expires=${date.toUTCString()}`);\n    } else {\n      // console.log(`Set cookie: ${name}=${value}; no expiration`);\n    }\n    document.cookie = name + '=' + (value || '') + expires + '; path=/';\n  },\n\n  getCookie(name) {\n    const nameEQ = name + \"=\";\n    const ca = document.cookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n      if (c.indexOf(nameEQ) === 0) {\n        // console.log(`Get cookie: ${name}=${c.substring(nameEQ.length, c.length)}`);\n        return c.substring(nameEQ.length, c.length);\n      }\n    }\n    // console.log(`Cookie ${name} not found`);\n    return null;\n  }\n};\n\nconst hidePopup = () => {\n  document.querySelector('.exit-intent-popup-desktop').classList.remove('visible');\n  // console.log('Popup hidden');\n};\n\n\n//Simply popup closed\nconst exit = (e) => {\n  if (e.target.className === 'close') {\n    hidePopup();\n    CookieService.setCookie('exitIntentClosed', true, 2); // Set cookie for 2 days\n    // console.log('Exit event triggered');\n  }\n};\n\n//exit intent mouse above document\nconst mouseEvent = (e) => {\n  const shouldShowExitIntent = !e.toElement && !e.relatedTarget && e.clientY < 10;\n  // console.log(`Mouse event detected, should show exit intent: ${shouldShowExitIntent}`);\n  if (shouldShowExitIntent && !CookieService.getCookie('exitIntentClosed') && !CookieService.getCookie('formSubmitted')) {\n    document.removeEventListener('mouseout', mouseEvent);\n    document.querySelector('.exit-intent-popup-desktop').classList.add('visible');\n    CookieService.setCookie('exitIntentShown', true, 2); // Set cookie for 2 days\n    // console.log('Exit intent popup shown');\n  }\n};\n\n//\nconst scrollEvent = () => {\n  const scrollPosition = window.scrollY || document.documentElement.scrollTop;\n  const scrollHeight = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n  const scrollPercent = (scrollPosition / scrollHeight) * 100;\n  // console.log(`Scroll event detected, scroll percent: ${scrollPercent}%`);\n  if (scrollPercent > 15 && !CookieService.getCookie('exitIntentClosed') && !CookieService.getCookie('formSubmitted')) {\n    document.removeEventListener('scroll', scrollEvent);\n    document.querySelector('.exit-intent-popup-desktop').classList.add('visible');\n    CookieService.setCookie('exitIntentShown', true, 2); // Set cookie for 2 days\n    // console.log('Exit intent popup shown due to scroll');\n  }\n};\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // console.log('DOMContentLoaded event');\n  if (!CookieService.getCookie('exitIntentClosed') && !CookieService.getCookie('formSubmitted')) {\n    setTimeout(() => {\n      if (window.innerWidth > 768) { // Desktop\n        document.addEventListener('mouseout', mouseEvent);\n        document.addEventListener('click', exit);\n        // console.log('Mouseout and click event listeners added for desktop');\n      } else { // Mobile and Tablet\n        document.addEventListener('scroll', scrollEvent);\n        // console.log('Scroll event listener added for mobile/tablet');\n      }\n    }, 2000);\n\n    // Show popup after 10 seconds if not already shown\n    setTimeout(() => {\n      if (!CookieService.getCookie('exitIntentShown') && window.innerWidth > 768) {\n        const popup = document.querySelector('.exit-intent-popup-desktop');\n        if (popup) {\n          popup.classList.add('visible');\n          // console.log('Popup shown after 10 seconds on desktop');\n        } else {\n          // console.log('Popup not found after 10 seconds');\n        }\n      }\n    }, 30000);\n  }\n\n  // Get all forms with the custom attribute\n  const forms = document.querySelectorAll('[data-form-id]');\n  // console.log('Number of forms found:', forms.length);\n\n  // Iterate over each form\n  forms.forEach(form => {\n    const formId = form.getAttribute('data-form-id');\n    // console.log('Checking form with ID:', formId);\n\n    // Check if the form has been submitted before\n    if (CookieService.getCookie(`formSubmitted_${formId}`)) {\n      hidePopup(); // Hide the popup if the form has been submitted before\n    } else {\n      form.addEventListener('submit', (e) => {\n        // e.preventDefault(); // Prevent the default form submission behavior\n\n        // setTimeout(() => {\n        //   hidePopup();\n        // }, 2000);\n\n        // Set a cookie to indicate that the form has been submitted\n        CookieService.setCookie(`formSubmitted_${formId}`, true, 365);\n\n        // console.log(`Form ${formId} submitted, popup hidden`);\n      });\n    }\n  });\n\n\n\n\n  // Close button handler\n  document.querySelectorAll('.modal-continue-button, .close').forEach(button => {\n    button.addEventListener('click', () => {\n      hidePopup();\n      CookieService.setCookie('exitIntentClosed', true, 2); // Set cookie for 2 days\n      // console.log('Popup closed via button');\n    });\n  });\n\n\n\n});\n\n\n\n\n\n"],
  "mappings": "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",
  "names": []
}
