{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/search-glossary.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "// Function to handle search\nfunction handleSearch() {\n    const searchInput = document.querySelector('.search-glossary'); // Search input field\n\n    if (!searchInput) return;\n\n    searchInput.addEventListener('input', function () {\n        const searchValue = searchInput.value.toLowerCase().trim();\n        applySearch(searchValue);  // Apply search when input changes\n    });\n}\n\n// Function to apply the search logic\nfunction applySearch(searchValue) {\n    const cmsHeadings = document.querySelectorAll('.glossary-h2'); // CMS item headings with class .glossary-h2\n\n    if (!cmsHeadings) return;\n\n    cmsHeadings.forEach((heading) => {\n        const headingText = heading.getAttribute('data-heading')\n            ? heading.getAttribute('data-heading').toLowerCase()\n            : heading.textContent.toLowerCase().trim(); // Use textContent as fallback if data-heading is missing\n\n        // Check if the heading text includes the search value\n        if (headingText.includes(searchValue)) {\n            // Show the parent CMS item with class .glossary-item-group if it matches\n            heading.closest('.glossary-item-group').style.display = 'block';\n        } else {\n            // Hide the parent CMS item if it doesn't match\n            heading.closest('.glossary-item-group').style.display = 'none';\n        }\n    });\n}\n\n// Apply search after polling or whenever new content is added\nfunction applySearchAfterPolling() {\n    const searchInput = document.querySelector('.search-glossary');\n    if (!searchInput) return;\n\n    const currentSearchValue = searchInput.value.toLowerCase().trim();\n    if (currentSearchValue !== '') {\n        applySearch(currentSearchValue);  // Apply the current search value to new items\n    }\n}\n\n\n\n\n// Initialize the search functionality\nhandleSearch();\n\n// Call this function after each polling or when new items are loaded\napplySearchAfterPolling();\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,uBAAY,UAAU,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACC7F,WAAS,eAAe;AACpB,UAAM,cAAc,SAAS,cAAc,kBAAkB;AAE7D,QAAI,CAAC;AAAa;AAElB,gBAAY,iBAAiB,SAAS,WAAY;AAC9C,YAAM,cAAc,YAAY,MAAM,YAAY,EAAE,KAAK;AACzD,kBAAY,WAAW;AAAA,IAC3B,CAAC;AAAA,EACL;AAGA,WAAS,YAAY,aAAa;AAC9B,UAAM,cAAc,SAAS,iBAAiB,cAAc;AAE5D,QAAI,CAAC;AAAa;AAElB,gBAAY,QAAQ,CAAC,YAAY;AAC7B,YAAM,cAAc,QAAQ,aAAa,cAAc,IACjD,QAAQ,aAAa,cAAc,EAAE,YAAY,IACjD,QAAQ,YAAY,YAAY,EAAE,KAAK;AAG7C,UAAI,YAAY,SAAS,WAAW,GAAG;AAEnC,gBAAQ,QAAQ,sBAAsB,EAAE,MAAM,UAAU;AAAA,MAC5D,OAAO;AAEH,gBAAQ,QAAQ,sBAAsB,EAAE,MAAM,UAAU;AAAA,MAC5D;AAAA,IACJ,CAAC;AAAA,EACL;AAGA,WAAS,0BAA0B;AAC/B,UAAM,cAAc,SAAS,cAAc,kBAAkB;AAC7D,QAAI,CAAC;AAAa;AAElB,UAAM,qBAAqB,YAAY,MAAM,YAAY,EAAE,KAAK;AAChE,QAAI,uBAAuB,IAAI;AAC3B,kBAAY,kBAAkB;AAAA,IAClC;AAAA,EACJ;AAMA,eAAa;AAGb,0BAAwB;",
  "names": []
}
