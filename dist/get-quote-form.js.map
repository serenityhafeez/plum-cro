{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/get-quote-form.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "document.addEventListener(\"DOMContentLoaded\", function () {\n    const steps = document.querySelectorAll(\".form-block-wrapper\");\n    const nextButton = document.querySelector(\".next-get-quote\");\n    const backButton = document.querySelector(\".go-back-get-quote\");\n    const submitButton = document.querySelector(\".submit-get-quote\");\n\n    const freeEmailDomains = [\"gmail.com\", \"yahoo.com\", \"hotmail.com\", \"outlook.com\"];\n    const lastStepElements = document.querySelectorAll(\".last-step\");\n    const switchToBizElements = document.querySelectorAll(\".switch-to-biz\");\n\n    let currentStep = 0;\n    let isBusinessEmail = false;\n\n    // Function to validate a single field\n    function validateField(field) {\n        const errorMessage = field\n            .closest(\".form-input-holder\")\n            .querySelector(\".required-field\");\n\n        // For radio buttons\n        if (field.type === \"radio\") {\n            const radioGroup = field.closest(\".form-block-wrapper\").querySelectorAll(\n                `input[name=\"${field.name}\"]`\n            );\n            const isChecked = Array.from(radioGroup).some((radio) => radio.checked);\n\n            errorMessage.classList.toggle('visible', !isChecked);\n            return isChecked;\n        }\n        // For select fields\n        else if (field.tagName === \"SELECT\") {\n            const isEmpty = field.value.trim() === \"\";\n            errorMessage.classList.toggle('visible', isEmpty);\n            return !isEmpty;\n        }\n        // For standard input fields\n        else {\n            const isEmpty = !field.value.trim();\n            errorMessage.classList.toggle('visible', isEmpty);\n            return !isEmpty;\n        }\n    }\n\n    // Setup real-time validation listeners\n    function setupValidationListeners() {\n        steps.forEach(step => {\n            // Handle text and email inputs\n            const inputs = step.querySelectorAll('input[type=\"text\"], input[type=\"email\"]');\n            inputs.forEach(input => {\n                input.addEventListener('input', () => {\n                    if (input.value.trim()) {\n                        const errorMessage = input\n                            .closest(\".form-input-holder\")\n                            .querySelector(\".required-field\");\n                        errorMessage.classList.remove('visible');\n                    }\n                });\n            });\n\n            // Handle select inputs\n            const selects = step.querySelectorAll('select');\n            selects.forEach(select => {\n                select.addEventListener('change', () => {\n                    if (select.value.trim()) {\n                        const errorMessage = select\n                            .closest(\".form-input-holder\")\n                            .querySelector(\".required-field\");\n                        errorMessage.classList.remove('visible');\n                    }\n                });\n            });\n\n            // Handle radio buttons\n            const radioGroups = new Set();\n            const radioButtons = step.querySelectorAll('input[type=\"radio\"]');\n            radioButtons.forEach(radio => {\n                radioGroups.add(radio.name);\n            });\n\n            radioGroups.forEach(groupName => {\n                const radios = step.querySelectorAll(`input[type=\"radio\"][name=\"${groupName}\"]`);\n                radios.forEach(radio => {\n                    radio.addEventListener('change', () => {\n                        const errorMessage = radio\n                            .closest(\".form-input-holder\")\n                            .querySelector(\".required-field\");\n                        errorMessage.classList.remove('visible');\n                    });\n                });\n            });\n        });\n    }\n\n    // Validate all required fields in current step\n    function validateStep() {\n        const currentFormStep = steps[currentStep];\n        const requiredFields = currentFormStep.querySelectorAll(\"[required]\");\n        let isValid = true;\n\n        requiredFields.forEach((field) => {\n            const errorMessage = field\n                .closest(\".form-input-holder\")\n                .querySelector(\".required-field\");\n\n            // For radio buttons\n            if (field.type === \"radio\") {\n                const radioGroup = currentFormStep.querySelectorAll(\n                    `input[name=\"${field.name}\"]`\n                );\n                const isChecked = Array.from(radioGroup).some((radio) => radio.checked);\n\n                if (!isChecked) {\n                    errorMessage.classList.add('visible');\n                    isValid = false;\n                }\n            }\n            // For select fields\n            else if (field.tagName === \"SELECT\") {\n                if (field.value.trim() === \"\") {\n                    errorMessage.classList.add('visible');\n                    isValid = false;\n                }\n            }\n            // For standard input fields\n            else if (!field.value.trim()) {\n                errorMessage.classList.add('visible');\n                isValid = false;\n            }\n        });\n\n        return isValid;\n    }\n\n    function showStep(stepIndex) {\n        steps.forEach((step, index) => {\n            if (index === stepIndex) {\n                step.classList.remove('hidden');\n            } else {\n                step.classList.add('hidden');\n            }\n        });\n\n        backButton.classList.toggle(\"visible\", stepIndex > 0);\n\n        if (isBusinessEmail && stepIndex === 1) {\n            nextButton.style.display = \"none\";\n            submitButton.classList.add(\"visible\");\n        }\n        else if (!isBusinessEmail && stepIndex === steps.length - 1) {\n            nextButton.style.display = \"none\";\n            submitButton.classList.add(\"visible\");\n        }\n        else {\n            nextButton.style.display = \"inline-block\";\n            submitButton.classList.remove(\"visible\");\n        }\n    }\n\n    function markLastStepFieldsNil() {\n        const companyTypeSelect = document.getElementById(\"company-type\");\n        if (companyTypeSelect) {\n            if (!Array.from(companyTypeSelect.options).some(option => option.value === \"nil\")) {\n                const nilOption = document.createElement(\"option\");\n                nilOption.value = \"nil\";\n                nilOption.textContent = \"Nil\";\n                companyTypeSelect.appendChild(nilOption);\n            }\n            companyTypeSelect.value = \"nil\";\n        }\n\n        const nilRadio = document.querySelector('input[type=\"radio\"][value=\"nil\"]');\n        if (nilRadio) {\n            nilRadio.checked = true;\n        }\n\n        const industrySelect = document.getElementById(\"industry\");\n        if (industrySelect) {\n            if (!Array.from(industrySelect.options).some(option => option.value === \"nil\")) {\n                const nilOption = document.createElement(\"option\");\n                nilOption.value = \"nil\";\n                nilOption.textContent = \"Nil\";\n                industrySelect.appendChild(nilOption);\n            }\n            industrySelect.value = \"nil\";\n        }\n    }\n\n    function resetLastStepFields() {\n        const companyTypeSelect = document.getElementById(\"company-type\");\n        if (companyTypeSelect) {\n            const nilOption = companyTypeSelect.querySelector('option[value=\"nil\"]');\n            if (nilOption) {\n                nilOption.remove();\n            }\n            companyTypeSelect.value = \"\";\n        }\n\n        const nilRadio = document.querySelector('input[type=\"radio\"][value=\"nil\"]');\n        if (nilRadio) {\n            nilRadio.checked = false;\n        }\n\n        const industrySelect = document.getElementById(\"industry\");\n        if (industrySelect) {\n            const nilOption = industrySelect.querySelector('option[value=\"nil\"]');\n            if (nilOption) {\n                nilOption.remove();\n            }\n            industrySelect.value = \"\";\n        }\n    }\n\n    function handleEmailInput() {\n        const emailField = steps[0].querySelector(\"input[type='email']\");\n\n        emailField.addEventListener(\"input\", function () {\n            const emailValue = emailField.value.trim();\n            isBusinessEmail = !freeEmailDomains.includes(emailValue.split(\"@\")[1]);\n\n            if (isBusinessEmail) {\n                lastStepElements.forEach((el) => el.classList.add(\"remove\"));\n                switchToBizElements.forEach((el) => el.classList.remove(\"visible\"));\n            } else {\n                resetLastStepFields();\n                lastStepElements.forEach((el) => el.classList.remove(\"remove\"));\n                switchToBizElements.forEach((el) => el.classList.add(\"visible\"));\n            }\n        });\n    }\n\n    // Event listeners\n    nextButton.addEventListener(\"click\", function () {\n        if (validateStep()) {\n            if (currentStep === 0 && isBusinessEmail) {\n                markLastStepFieldsNil();\n            }\n\n            if (currentStep < steps.length - 1) {\n                currentStep++;\n                showStep(currentStep);\n            }\n        }\n    });\n\n    backButton.addEventListener(\"click\", function () {\n        if (currentStep > 0) {\n            currentStep--;\n            showStep(currentStep);\n        }\n    });\n\n    submitButton.addEventListener(\"click\", function () {\n        if (validateStep()) {\n            console.log(\"Form Submitted Successfully!\");\n        }\n    });\n\n    // Initialize form - ensure other steps start hidden\n    steps.forEach((step, index) => {\n        if (index > 0) {\n            step.classList.add('hidden');\n        }\n    });\n    handleEmailInput();\n    setupValidationListeners();\n});"],
  "mappings": "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",
  "names": []
}
