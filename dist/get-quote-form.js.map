{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/get-quote-form.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "document.addEventListener(\"DOMContentLoaded\", function () {\n    const steps = document.querySelectorAll(\".form-block-wrapper\");\n    const nextButton = document.querySelector(\".next-get-quote\");\n    const backButton = document.querySelector(\".go-back-get-quote\");\n    const submitButton = document.querySelector(\".submit-get-quote\");\n\n    const freeEmailDomains = [\"gmail.com\", \"yahoo.com\", \"hotmail.com\", \"outlook.com\"];\n    const lastStepElements = document.querySelectorAll(\".last-step\");\n    const switchToBizElements = document.querySelectorAll(\".switch-to-biz\");\n\n    let currentStep = 0;\n    let isBusinessEmail = false;\n    let contactCreated = false;\n\n    const backendEndpoint = \"https://backend-eoqisywzm-mohammed-hafeezs-projects.vercel.app/api/hubspot\";\n\n\n\n\n    // Show loading indicator\n    function showLoading(isLoading) {\n        const loader = document.querySelector(\".loading-indicator\");\n        const submitText = document.querySelector(\".submit-text\");\n        const loaderGq = document.querySelector(\".loader-gq\");\n\n        if (loader) {\n            loader.style.display = isLoading ? \"block\" : \"none\";\n        }\n\n        if (submitText && loaderGq) {\n            if (isLoading) {\n                submitText.classList.add(\"hidden\"); // Add .hidden class to .submit-text\n                loaderGq.classList.remove(\"hidden\"); // Remove .hidden class from .loader-gq\n            } else {\n                submitText.classList.remove(\"hidden\"); // Remove .hidden class from .submit-text\n                loaderGq.classList.add(\"hidden\"); // Add .hidden class to .loader-gq\n            }\n        }\n    }\n\n    function setLastStepFieldsNil() {\n        // Ensure nil options are only created for business email users\n        if (!isBusinessEmail) {\n            console.log(\"Skipping setting nil options for free email.\");\n            return; // Exit the function early for free email domains\n        }\n\n        const companyTypeSelect = document.getElementById(\"company_registration_type_gq\");\n        if (companyTypeSelect && companyTypeSelect.value.trim() === \"\") {\n            addNilOption(companyTypeSelect);\n            companyTypeSelect.value = \"nil\";\n        }\n\n        const nilRadio = document.querySelector('input[type=\"radio\"][value=\"nil\"]');\n        if (nilRadio) nilRadio.checked = true;\n\n        const industrySelect = document.getElementById(\"industry_gq\");\n        if (industrySelect && industrySelect.value.trim() === \"\") {\n            addNilOption(industrySelect);\n            industrySelect.value = \"nil\";\n        }\n\n        // For Step 3 fields if business email\n        if (currentStep === 2) {\n            const stepThreeFields = steps[2].querySelectorAll(\"select[name], input[name], textarea[name]\");\n            stepThreeFields.forEach((field) => {\n                if (field.tagName === \"SELECT\" && field.value.trim() === \"\") {\n                    addNilOption(field);\n                    field.value = \"nil\";\n                } else if (field.type === \"radio\" && !steps[2].querySelector(`input[name=\"${field.name}\"]:checked`)) {\n                    const nilOption = steps[2].querySelector(`input[name=\"${field.name}\"][value=\"nil\"]`);\n                    if (!nilOption) {\n                        const nilRadio = document.createElement(\"input\");\n                        nilRadio.type = \"radio\";\n                        nilRadio.name = field.name;\n                        nilRadio.value = \"nil\";\n                        steps[2].appendChild(nilRadio);\n                    }\n                    steps[2].querySelector(`input[name=\"${field.name}\"][value=\"nil\"]`).checked = true;\n                }\n            });\n        }\n    }\n\n    // Helper to add a \"nil\" option to a select element (only for business emails)\n    function addNilOption(selectElement) {\n        // Prevent showing nil in the frontend by ensuring it is not created if already present\n        if (!Array.from(selectElement.options).some(option => option.value === \"nil\")) {\n            const nilOption = document.createElement(\"option\");\n            nilOption.value = \"nil\";\n            nilOption.textContent = \"\"; // Empty text ensures nil isn't visible in the frontend\n            selectElement.appendChild(nilOption);\n        }\n    }\n\n\n    function collectStepData() {\n        const currentFormStep = steps[currentStep];\n        const fields = currentFormStep.querySelectorAll(\"input[name], select[name], textarea[name]\");\n        const data = {};\n\n        fields.forEach((field) => {\n            if (field.name) {\n                if (field.type === \"radio\" && !field.checked) return; // Skip unchecked radios\n                data[field.name] = field.value.trim();\n            }\n        });\n\n        const emailField = document.querySelector(\"input[type='email']\");\n        if (emailField) {\n            data.email = emailField.value.trim();\n        }\n\n        console.log(\"Collected Step Data:\", data); // Debug collected data\n        return data;\n    }\n\n    function validateStep() {\n        const currentFormStep = steps[currentStep];\n        const requiredFields = currentFormStep.querySelectorAll(\"[required]\");\n        let isValid = true;\n\n        requiredFields.forEach((field) => {\n            const errorMessage = field.closest(\".form-input-holder\").querySelector(\".required-field\");\n            const isFieldEmpty = field.type === \"radio\"\n                ? !currentFormStep.querySelector(`input[name=\"${field.name}\"]:checked`)\n                : !field.value.trim();\n\n            if (isFieldEmpty) {\n                errorMessage.classList.add(\"visible\");\n                isValid = false;\n            } else {\n                errorMessage.classList.remove(\"visible\");\n            }\n\n            field.addEventListener(\"input\", () => errorMessage.classList.remove(\"visible\"));\n        });\n\n        return isValid;\n    }\n\n    async function checkIfContactExists(email) {\n        const url = `${backendEndpoint}?email=${encodeURIComponent(email)}`;\n        try {\n            const response = await fetch(url, {\n                method: \"GET\",\n                headers: { \"Content-Type\": \"application/json\" },\n            });\n\n            // Parse the response body\n            const responseBody = await response.json();\n            console.log(\"GET Response Status:\", response.status);\n            console.log(\"GET Response Body:\", responseBody);\n\n            // Check the contactExists field in the response body\n            if (responseBody.contactExists === true) {\n                console.log(\"Contact exists (contactExists: true).\"); // Debug log\n                return true; // Contact exists\n            }\n\n            if (responseBody.contactExists === false) {\n                console.log(\"Contact does not exist (contactExists: false).\"); // Debug log\n                return false; // Contact does not exist\n            }\n\n            // Handle unexpected cases\n            console.error(\"Unexpected response body or format:\", responseBody);\n            return false; // Assume contact does not exist on unexpected format\n        } catch (error) {\n            console.error(\"Error during contact existence check:\", error.message);\n            return false; // Assume contact does not exist on error\n        }\n    }\n\n    async function sendDataToBackend(data, isCreate) {\n        const method = isCreate ? \"POST\" : \"PATCH\";\n\n        const payload = {\n            email: data.email,\n            properties: { ...data },\n        };\n\n        console.log(\"Sending Payload:\", payload); // Debug payload\n\n        try {\n            showLoading(true);\n            const response = await fetch(backendEndpoint, {\n                method: method,\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(payload),\n            });\n\n            const result = await response.json();\n\n            if (!response.ok) {\n                throw new Error(result.message || `Failed: ${response.statusText}`);\n            }\n\n            console.log(`${method} Successful:`, result);\n            return result;\n        } catch (error) {\n            console.error(\"Error submitting data:\", error.message);\n            throw error;\n        }\n        finally {\n            showLoading(false); // Hide the loading indicator after the operation\n        }\n    }\n\n\n\n    //Handle email input\n    function handleEmailInput() {\n        const emailField = steps[0].querySelector(\"input[type='email']\");\n\n        // Ensure `lastStepElements` and `switchToBizElements` are hidden initially\n        lastStepElements.forEach((el) => el.classList.add(\"remove\"));\n\n        emailField.addEventListener(\"input\", () => {\n            const emailValue = emailField.value.trim();\n            const domain = emailValue.split(\"@\")[1]?.toLowerCase(); // Extract the domain after \"@\"\n\n            if (domain && freeEmailDomains.includes(domain)) {\n                isBusinessEmail = false; // Free email domain\n                lastStepElements.forEach((el) => el.classList.remove(\"remove\"));\n                switchToBizElements.forEach((el) => el.classList.add(\"visible\"));\n            } else if (domain) {\n                isBusinessEmail = true; // Business email domain\n                switchToBizElements.forEach((el) => el.classList.remove(\"visible\"));\n                lastStepElements.forEach((el) => el.classList.add(\"remove\"));\n            } else {\n                isBusinessEmail = false; // Incomplete or invalid input\n                lastStepElements.forEach((el) => el.classList.add(\"remove\"));\n                switchToBizElements.forEach((el) => el.classList.add(\"remove\"));\n            }\n\n            setLastStepFieldsNil();\n\n            // Update the button visibility dynamically\n            showStep(currentStep);\n        });\n    }\n\n    function showStep(stepIndex) {\n        steps.forEach((step, index) => step.classList.toggle(\"hidden\", index !== stepIndex));\n        backButton.classList.toggle(\"visible\", stepIndex > 0);\n\n        // Logic for showing or hiding buttons based on the step and email type\n        if (stepIndex === 1 && isBusinessEmail) {\n            nextButton.style.display = \"none\"; // Hide Next button\n            submitButton.classList.add(\"visible\"); // Show Submit button\n        } else {\n            nextButton.style.display = (stepIndex === steps.length - 1 || (stepIndex === 1 && isBusinessEmail)) ? \"none\" : \"inline-block\";\n            submitButton.classList.toggle(\"visible\", stepIndex === steps.length - 1 || (stepIndex === 1 && isBusinessEmail));\n        }\n    }\n\n    nextButton.addEventListener(\"click\", async () => {\n        if (validateStep()) {\n            const data = collectStepData();\n\n            if (currentStep === 0 && !contactCreated) {\n                console.log(\"Checking if contact exists for email:\", data.email);\n                const exists = await checkIfContactExists(data.email);\n\n                if (exists) {\n                    console.log(\"Contact exists, sending PATCH...\");\n                    await sendDataToBackend(data, false); // PATCH\n                } else {\n                    console.log(\"Contact does not exist, sending POST...\");\n                    await sendDataToBackend(data, true); // POST\n                    contactCreated = true;\n                }\n            } else {\n                console.log(\"Sending PATCH for step data...\");\n                await sendDataToBackend(data, false); // PATCH\n            }\n\n            if (currentStep < steps.length - 1) {\n                currentStep++;\n                showStep(currentStep);\n            }\n        }\n    });\n\n    submitButton.addEventListener(\"click\", async () => {\n        if (validateStep()) {\n            const data = collectStepData();\n            console.log(\"Submitting final data with PATCH...\");\n            await sendDataToBackend(data, false); // PATCH\n            console.log(\"Form submitted successfully!\");\n            // triggerRevenueHero();\n        }\n    });\n\n\n    backButton.addEventListener(\"click\", () => {\n        if (currentStep > 0) {\n            currentStep--;\n            showStep(currentStep);\n        }\n    });\n\n    setLastStepFieldsNil();\n    showStep(currentStep);\n    handleEmailInput();\n});\n\n\n\n"],
  "mappings": "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",
  "names": ["nilRadio"]
}
