{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/glossary.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "let pollCount = 0;\nconst maxPolls = 10;\n\nconst updateGlossaryAnchors = () => {\n    const item_names = document.querySelectorAll('.glossary-h2');\n    const letters = [];\n    console.log(\"SDK Loaded\");\n\n    item_names.forEach((item, index) => {\n        let name = item.innerHTML;\n        let first_char = name.charAt(0);\n\n        const letter_anchor = item.parentElement.parentElement.querySelector('.letter_anchor');\n        const hidden_letter = item.parentElement.parentElement.querySelector('.glossary-hidden-letter');\n\n        if (letter_anchor && hidden_letter) {\n            letter_anchor.setAttribute(\"id\", first_char);\n            hidden_letter.setAttribute(\"data-letter\", first_char);\n            hidden_letter.innerHTML = first_char;\n        }\n\n        if (letters.indexOf(first_char) === -1) {\n            letters.push(first_char);\n        }\n    });\n\n    // Letter Links\n    const alpha = Array.from(Array(26)).map((e, i) => i + 65);\n    const alphabet = alpha.map((x) => String.fromCharCode(x));\n    const links_wrap = document.getElementById('links_wrap');\n\n    // Clear existing links before reappending\n    links_wrap.innerHTML = '';\n\n    alphabet.forEach((letter_link, index) => {\n        let a = document.createElement(\"a\");\n        a.innerHTML = letter_link;\n        a.setAttribute(\"class\", 'term-link');\n\n        if (letters.includes(letter_link)) {\n            a.setAttribute(\"href\", '#' + letter_link);\n        }\n\n        links_wrap.appendChild(a);\n    });\n\n    // Show Letter headlines for each group\n    const elementArray = document.getElementsByClassName(\"glossary-hidden-letter\");\n    const usedLetters = new Set([]);\n\n    for (let i = 0; i < elementArray.length; i++) {\n        const letter = elementArray[i].getAttribute(\"data-letter\");\n\n        if (usedLetters.has(letter) === false) {\n            usedLetters.add(letter);\n            createLetterLink(elementArray[i]);\n        }\n    }\n\n    // Call this function to handle checkboxes\n    handleCheckboxChange();\n\n    // Ensure new glossary-hidden-letter elements are hidden if the checkbox is already checked\n    applyCheckboxState();\n}\n\n// Create separation (without g-spacer)\nfunction createLetterLink(element) {\n    element.classList.add('glossary-letter');\n}\n\n// Function to handle checkbox behavior (for glossary-hidden-letter)\nfunction handleCheckboxChange() {\n    const checkboxes = document.querySelectorAll('#checkbox-3');\n\n    checkboxes.forEach((checkbox) => {\n        checkbox.addEventListener('change', function () {\n            if (checkbox.checked) {\n                hideGlossaryLetters();\n            } else {\n                showGlossaryLetters();\n            }\n        });\n    });\n}\n\n// Function to hide all glossary-hidden-letter elements\nfunction hideGlossaryLetters() {\n    const hiddenLetters = document.querySelectorAll('.glossary-hidden-letter');\n    hiddenLetters.forEach((element) => {\n        element.style.display = 'none';\n    });\n}\n\n// Function to show all glossary-hidden-letter elements\nfunction showGlossaryLetters() {\n    const hiddenLetters = document.querySelectorAll('.glossary-hidden-letter');\n    hiddenLetters.forEach((element) => {\n        element.style.display = '';\n    });\n}\n\n// Function to apply checkbox state to all glossary-hidden-letter elements\nfunction applyCheckboxState() {\n    const checkboxes = document.querySelectorAll('#checkbox-3');\n    checkboxes.forEach((checkbox) => {\n        if (checkbox.checked) {\n            hideGlossaryLetters();\n        }\n    });\n}\n\n\nfunction showRandomCollectionItemDaily() {\n    // Function to handle the process\n    function showRandomCollectionItem() {\n        console.log(\"Starting random item selection...\");  // Debugging log\n\n        // Get today's date in a 'YYYY-MM-DD' format\n        const today = new Date().toISOString().slice(0, 10);\n        console.log(\"Today's Date:\", today);  // Debugging log\n\n        // Check local storage for previously selected item and date\n        const storedDate = localStorage.getItem('randomItemDate');\n        const storedItemIndex = localStorage.getItem('randomItemIndex');\n\n        console.log(\"Stored Date:\", storedDate);  // Debugging log\n        console.log(\"Stored Item Index:\", storedItemIndex);  // Debugging log\n\n        // If it's the same day and there's a stored item index, use the stored item\n        if (storedDate === today && storedItemIndex !== null) {\n            console.log(\"Using stored item for today.\");  // Debugging log\n            showItem(parseInt(storedItemIndex));\n            return;\n        }\n\n        // Get all collection items (adjust the selector to match your collection)\n        const collectionItems = document.querySelectorAll('wod-item-cms');\n        console.log(\"Collection Items Found:\", collectionItems.length);  // Debugging log\n\n        if (collectionItems.length > 0) {\n            // Randomly select an index for the collection item\n            const randomIndex = Math.floor(Math.random() * collectionItems.length);\n            console.log(\"Randomly Selected Index:\", randomIndex);  // Debugging log\n\n            // Store the random index and today's date in localStorage\n            localStorage.setItem('randomItemDate', today);\n            localStorage.setItem('randomItemIndex', randomIndex);\n\n            // Show the randomly selected item\n            showItem(randomIndex);\n        } else {\n            console.log('No collection items found.');\n        }\n    }\n\n    // Function to display only the randomly selected item and hide others\n    function showItem(index) {\n        const collectionItems = document.querySelectorAll('wod-item-cms');\n        console.log(\"Showing item at index:\", index);  // Debugging log\n\n        collectionItems.forEach((item, i) => {\n            if (i === index) {\n                item.style.display = 'block';  // Show the selected item\n            } else {\n                item.style.display = 'none';   // Hide the other items\n            }\n        });\n    }\n\n    // Call the function when the page is fully loaded\n    window.onload = function () {\n        console.log(\"Page fully loaded, starting item selection.\");  // Debugging log\n        showRandomCollectionItem();\n    };\n}\n\n// Call this function to start showing a random collection item daily\nshowRandomCollectionItemDaily();\n\n\n\n// Polling mechanism to run only twice\nconst pollInterval = setInterval(() => {\n    if (pollCount < maxPolls) {\n        updateGlossaryAnchors();\n        pollCount++;\n    } else {\n        clearInterval(pollInterval);\n    }\n}, 1000); // Polling interval (5 seconds)\n\n// Initial update\nupdateGlossaryAnchors();\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,uBAAY,UAAU,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACA7F,MAAI,YAAY;AAChB,MAAM,WAAW;AAEjB,MAAM,wBAAwB,MAAM;AAChC,UAAM,aAAa,SAAS,iBAAiB,cAAc;AAC3D,UAAM,UAAU,CAAC;AACjB,YAAQ,IAAI,YAAY;AAExB,eAAW,QAAQ,CAAC,MAAM,UAAU;AAChC,UAAI,OAAO,KAAK;AAChB,UAAI,aAAa,KAAK,OAAO,CAAC;AAE9B,YAAM,gBAAgB,KAAK,cAAc,cAAc,cAAc,gBAAgB;AACrF,YAAM,gBAAgB,KAAK,cAAc,cAAc,cAAc,yBAAyB;AAE9F,UAAI,iBAAiB,eAAe;AAChC,sBAAc,aAAa,MAAM,UAAU;AAC3C,sBAAc,aAAa,eAAe,UAAU;AACpD,sBAAc,YAAY;AAAA,MAC9B;AAEA,UAAI,QAAQ,QAAQ,UAAU,MAAM,IAAI;AACpC,gBAAQ,KAAK,UAAU;AAAA,MAC3B;AAAA,IACJ,CAAC;AAGD,UAAM,QAAQ,MAAM,KAAK,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,MAAM,IAAI,EAAE;AACxD,UAAM,WAAW,MAAM,IAAI,CAAC,MAAM,OAAO,aAAa,CAAC,CAAC;AACxD,UAAM,aAAa,SAAS,eAAe,YAAY;AAGvD,eAAW,YAAY;AAEvB,aAAS,QAAQ,CAAC,aAAa,UAAU;AACrC,UAAI,IAAI,SAAS,cAAc,GAAG;AAClC,QAAE,YAAY;AACd,QAAE,aAAa,SAAS,WAAW;AAEnC,UAAI,QAAQ,SAAS,WAAW,GAAG;AAC/B,UAAE,aAAa,QAAQ,MAAM,WAAW;AAAA,MAC5C;AAEA,iBAAW,YAAY,CAAC;AAAA,IAC5B,CAAC;AAGD,UAAM,eAAe,SAAS,uBAAuB,wBAAwB;AAC7E,UAAM,cAAc,oBAAI,IAAI,CAAC,CAAC;AAE9B,aAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC1C,YAAM,SAAS,aAAa,CAAC,EAAE,aAAa,aAAa;AAEzD,UAAI,YAAY,IAAI,MAAM,MAAM,OAAO;AACnC,oBAAY,IAAI,MAAM;AACtB,yBAAiB,aAAa,CAAC,CAAC;AAAA,MACpC;AAAA,IACJ;AAGA,yBAAqB;AAGrB,uBAAmB;AAAA,EACvB;AAGA,WAAS,iBAAiB,SAAS;AAC/B,YAAQ,UAAU,IAAI,iBAAiB;AAAA,EAC3C;AAGA,WAAS,uBAAuB;AAC5B,UAAM,aAAa,SAAS,iBAAiB,aAAa;AAE1D,eAAW,QAAQ,CAAC,aAAa;AAC7B,eAAS,iBAAiB,UAAU,WAAY;AAC5C,YAAI,SAAS,SAAS;AAClB,8BAAoB;AAAA,QACxB,OAAO;AACH,8BAAoB;AAAA,QACxB;AAAA,MACJ,CAAC;AAAA,IACL,CAAC;AAAA,EACL;AAGA,WAAS,sBAAsB;AAC3B,UAAM,gBAAgB,SAAS,iBAAiB,yBAAyB;AACzE,kBAAc,QAAQ,CAAC,YAAY;AAC/B,cAAQ,MAAM,UAAU;AAAA,IAC5B,CAAC;AAAA,EACL;AAGA,WAAS,sBAAsB;AAC3B,UAAM,gBAAgB,SAAS,iBAAiB,yBAAyB;AACzE,kBAAc,QAAQ,CAAC,YAAY;AAC/B,cAAQ,MAAM,UAAU;AAAA,IAC5B,CAAC;AAAA,EACL;AAGA,WAAS,qBAAqB;AAC1B,UAAM,aAAa,SAAS,iBAAiB,aAAa;AAC1D,eAAW,QAAQ,CAAC,aAAa;AAC7B,UAAI,SAAS,SAAS;AAClB,4BAAoB;AAAA,MACxB;AAAA,IACJ,CAAC;AAAA,EACL;AAGA,WAAS,gCAAgC;AAErC,aAAS,2BAA2B;AAChC,cAAQ,IAAI,mCAAmC;AAG/C,YAAM,SAAQ,oBAAI,KAAK,GAAE,YAAY,EAAE,MAAM,GAAG,EAAE;AAClD,cAAQ,IAAI,iBAAiB,KAAK;AAGlC,YAAM,aAAa,aAAa,QAAQ,gBAAgB;AACxD,YAAM,kBAAkB,aAAa,QAAQ,iBAAiB;AAE9D,cAAQ,IAAI,gBAAgB,UAAU;AACtC,cAAQ,IAAI,sBAAsB,eAAe;AAGjD,UAAI,eAAe,SAAS,oBAAoB,MAAM;AAClD,gBAAQ,IAAI,8BAA8B;AAC1C,iBAAS,SAAS,eAAe,CAAC;AAClC;AAAA,MACJ;AAGA,YAAM,kBAAkB,SAAS,iBAAiB,cAAc;AAChE,cAAQ,IAAI,2BAA2B,gBAAgB,MAAM;AAE7D,UAAI,gBAAgB,SAAS,GAAG;AAE5B,cAAM,cAAc,KAAK,MAAM,KAAK,OAAO,IAAI,gBAAgB,MAAM;AACrE,gBAAQ,IAAI,4BAA4B,WAAW;AAGnD,qBAAa,QAAQ,kBAAkB,KAAK;AAC5C,qBAAa,QAAQ,mBAAmB,WAAW;AAGnD,iBAAS,WAAW;AAAA,MACxB,OAAO;AACH,gBAAQ,IAAI,4BAA4B;AAAA,MAC5C;AAAA,IACJ;AAGA,aAAS,SAAS,OAAO;AACrB,YAAM,kBAAkB,SAAS,iBAAiB,cAAc;AAChE,cAAQ,IAAI,0BAA0B,KAAK;AAE3C,sBAAgB,QAAQ,CAAC,MAAM,MAAM;AACjC,YAAI,MAAM,OAAO;AACb,eAAK,MAAM,UAAU;AAAA,QACzB,OAAO;AACH,eAAK,MAAM,UAAU;AAAA,QACzB;AAAA,MACJ,CAAC;AAAA,IACL;AAGA,WAAO,SAAS,WAAY;AACxB,cAAQ,IAAI,6CAA6C;AACzD,+BAAyB;AAAA,IAC7B;AAAA,EACJ;AAGA,gCAA8B;AAK9B,MAAM,eAAe,YAAY,MAAM;AACnC,QAAI,YAAY,UAAU;AACtB,4BAAsB;AACtB;AAAA,IACJ,OAAO;AACH,oBAAc,YAAY;AAAA,IAC9B;AAAA,EACJ,GAAG,GAAI;AAGP,wBAAsB;",
  "names": []
}
